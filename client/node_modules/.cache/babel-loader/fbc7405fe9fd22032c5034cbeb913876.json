{"ast":null,"code":"var _jsxFileName = \"/home/fanz0r/Desktop/Portfolio/mernShop/client/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Container, ListGroup, Row, Button } from 'react-bootstrap';\nimport CartItem from '../components/CartItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = () => {\n  _s();\n\n  const [cartList, setCartList] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  const priceHandler = data => {\n    let newPrice = totalPrice + data;\n    setTotalPrice(newPrice);\n  };\n\n  const DeleteHandler = index => {\n    let carts = JSON.parse(localStorage.getItem('products'));\n    carts.splice(index, 1);\n    setCartList(carts);\n    let totalPrice = Object.values(carts).reduce((t, {\n      price\n    }) => t + price, 0);\n    setTotalPrice(totalPrice);\n    localStorage.setItem('products', JSON.stringify(carts));\n  };\n\n  useEffect(() => {\n    let products = [];\n\n    if (localStorage.getItem('products')) {\n      products = JSON.parse(localStorage.getItem('products'));\n    }\n\n    setCartList(products);\n    let totalPrice = Object.values(products).reduce((t, {\n      price\n    }) => t + price, 0);\n    setTotalPrice(totalPrice);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"md mt-5 pb-5\",\n    style: {\n      border: '1px solid black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        lg: 2,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: cartList.map((item, index) => /*#__PURE__*/_jsxDEV(CartItem, {\n          name: item.name,\n          index: index,\n          id: item.productId,\n          img: item.image,\n          priceHandler: priceHandler,\n          price: item.price,\n          delete: DeleteHandler\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: \"Total Cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [totalPrice, \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartScreen, \"XPV6m0119iRmKI71/eWv3ygCEDg=\");\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/home/fanz0r/Desktop/Portfolio/mernShop/client/src/screens/CartScreen.js"],"names":["React","useState","useEffect","Col","Container","ListGroup","Row","Button","CartItem","CartScreen","cartList","setCartList","totalPrice","setTotalPrice","priceHandler","data","newPrice","DeleteHandler","index","carts","JSON","parse","localStorage","getItem","splice","Object","values","reduce","t","price","setItem","stringify","products","border","map","item","name","productId","image"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { Col, Container,ListGroup,Row, Button } from 'react-bootstrap';\nimport CartItem from '../components/CartItem'\n\nconst CartScreen = () => {\n    const [cartList,setCartList] = useState([])\n    const [totalPrice,setTotalPrice] = useState(0)\n\n    const priceHandler = (data) =>{\n        let newPrice = totalPrice + data\n        setTotalPrice(newPrice)\n    }\n    \n    const DeleteHandler = (index) =>{\n        let carts = JSON.parse(localStorage.getItem('products'))\n        carts.splice(index, 1);\n        setCartList(carts)\n        let totalPrice = Object.values(carts).reduce((t, {price}) => t + price, 0)\n        setTotalPrice(totalPrice)\n        localStorage.setItem('products', JSON.stringify(carts))\n\n    }\n    \n    useEffect(()=>{\n        let products =[]\n        if(localStorage.getItem('products')){\n            products = JSON.parse(localStorage.getItem('products'));\n        }\n        setCartList(products)\n        let totalPrice = Object.values(products).reduce((t, {price}) => t + price, 0)\n\n        setTotalPrice(totalPrice)\n        \n    },[])\n    return(\n        <Container className=\"md mt-5 pb-5\" style={{border:'1px solid black'}}>\n            <Row>\n                <Col md={2} lg={2} > \n                  <img alt=\"\"/>\n                </Col>\n                <Col md={3}>\n                  <p>item</p>\n                </Col>\n                <Col md={3}>\n                    <p>Quantity</p>\n                </Col>\n                <Col md={3}><p>Price</p></Col>\n            </Row>\n            <Row>\n                <ListGroup>\n                    {cartList.map((item,index)=><CartItem \n                    key={index}\n                    name={item.name}\n                    index={index} \n                    id={item.productId} \n                    img={item.image}\n                    priceHandler= {priceHandler}\n                    price={item.price}\n                    delete={DeleteHandler}\n                    />)}\n                </ListGroup>\n            </Row>\n            <Row>\n                <Col>Total Cost</Col>\n                <Col>{totalPrice}$</Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}